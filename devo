#!/bin/sh

set -e

version=0.1.0
tag="$(cat .devo)"

download_deno() {
	if [ "$(uname -m)" != "x86_64" ]; then
		echo "Error: Unsupported architecture $(uname -m). Only x64 binaries are available." 1>&2
		exit 1
	fi

	if ! command -v unzip >/dev/null; then
		echo "Error: unzip is required to install Deno (see: https://github.com/denoland/deno_install#unzip-is-required)." 1>&2
		exit 1
	fi

	if [ "$OS" = "Windows_NT" ]; then
		target="x86_64-pc-windows-msvc"
	else
		case $(uname -s) in
		Darwin) target="x86_64-apple-darwin" ;;
		*) target="x86_64-unknown-linux-gnu" ;;
		esac
	fi

	if [ -z "$tag" ]; then
		deno_asset_path=$(
			curl -sSf https://github.com/denoland/deno/releases |
				grep -o "/denoland/deno/releases/download/.*/deno-${target}\\.zip" |
				head -n 1
		)
		if [ ! "$deno_asset_path" ]; then
			echo "Error: Unable to find latest Deno release on GitHub." 1>&2
			exit 1
		fi
		deno_uri="https://github.com${deno_asset_path}"
	else
		deno_uri="https://github.com/denoland/deno/releases/download/${tag}/deno-${target}.zip"
	fi

	deno_install="${DENO_INSTALL:-$HOME/.deno}"
	bin_dir="$deno_install/bin"
	temp_dir="$bin_dir/temp"
	exe="$temp_dir/deno_$tag"

	if [ ! -d "$bin_dir" ]; then
		mkdir -p "$bin_dir"
	fi

	mkdir -p "$bin_dir/temp"
	curl --fail --location --progress-bar --output "$exe.zip" "$deno_uri"
	cd "$bin_dir"
	unzip -o "$exe.zip" -d "temp" > /dev/null
	chmod +x "temp/deno"
	mv "temp/deno" "deno_$tag"
	rm -r "$temp_dir"

	echo "Deno was installed successfully to $exe"
	if command -v deno >/dev/null; then
		echo "Run 'deno --help' to get started"
	else
		case $SHELL in
		/bin/zsh) shell_profile=".zshrc" ;;
		*) shell_profile=".bash_profile" ;;
		esac
		echo "Manually add the directory to your \$HOME/$shell_profile (or similar)"
		echo "  export DENO_INSTALL=\"$deno_install\""
		echo "  export PATH=\"\$DENO_INSTALL/bin:\$PATH\""
		echo "Run '$exe --help' to get started"
	fi
}

deno_install="${DENO_INSTALL:-$HOME/.deno}"
bin_dir="$deno_install/bin"
exe="$bin_dir/deno_$tag"
echo "$exe"
if [ ! -e "$exe" ]; then
	echo "$tag is not found, devo will download it first"
	download_deno
fi

if [ "$1" = "--version" ]; then
	echo "devo $version"
	"$exe" "--version"
else
	"$exe" "$@"
fi
